%!PS-Adobe-3.0
%%Creator: groff version 1.19.2
%%CreationDate: Tue Mar 10 10:58:49 2020
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.19 2
%%Pages: 2
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.19 2
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
}bind def
/PEND{
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 361.06(MiniLibX\(3\) MiniLibX\(3\))72 48 R/F1
10.95/Times-Bold@0 SF -.219(NA)72 84 S(ME).219 E F0(MiniLibX - Handle e)
108 96 Q -.15(ve)-.25 G(nts).15 E F1(SYNOPSYS)72 112.8 Q/F2 10
/Times-Italic@0 SF(int)108.01 124.8 Q/F3 10/Times-Bold@0 SF(mlx_loop)108
136.8 Q F0(\()2.5 E F2(void *mlx_ptr)2.79 E F0(\);)3.23 E F2(int)108.01
160.8 Q F3(mlx_k)108 172.8 Q(ey_hook)-.1 E F0(\()2.5 E F2(void *win_ptr)
2.79 E 2.5(,i)-1.11 G(nt \(*funct_ptr\)\(\), void *par)-2.5 E(am)-.15 E
F0(\);)2.82 E F2(int)108.01 196.8 Q F3(mlx_mouse_hook)108 208.8 Q F0(\()
2.5 E F2(void *win_ptr)2.79 E 2.5(,i)-1.11 G
(nt \(*funct_ptr\)\(\), void *par)-2.5 E(am)-.15 E F0(\);)2.82 E F2(int)
108.01 232.8 Q F3(mlx_expose_hook)108 244.8 Q F0(\()2.5 E F2
(void *win_ptr)2.79 E 2.5(,i)-1.11 G(nt \(*funct_ptr\)\(\), void *par)
-2.5 E(am)-.15 E F0(\);)2.82 E F2(int)108.01 268.8 Q F3(mlx_loop_hook)
108 280.8 Q F0(\()2.5 E F2(void *mlx_ptr)2.79 E 2.5(,i)-1.11 G
(nt \(*funct_ptr\)\(\), void *par)-2.5 E(am)-.15 E F0(\);)2.82 E F1
(EVENTS)72 309.6 Q F0 1.663(Both X-W)108 321.6 R(indo)-.4 E 4.163(wa)
-.25 G 1.662(nd MacOSX graphical systems are bi-directionnal.)-4.163 F
1.662(On one hand, the program sends)6.662 F .221
(orders to the screen to display pix)108 333.6 R .222(els, images, and \
so on. On the other hand, it can get information from the)-.15 F -.1(ke)
108 345.6 S .143(yboard and mouse associated to the screen. T)-.05 F
2.643(od)-.8 G 2.643(os)-2.643 G .143(o, the program recei)-2.643 F -.15
(ve)-.25 G 2.643(s").15 G -2.15 -.25(ev e)-2.643 H .143(nts" from the k)
.25 F -.15(ey)-.1 G .142(board or).15 F(the mouse.)108 357.6 Q F1
(DESCRIPTION)72 386.4 Q F0 1.73 -.8(To r)108 398.4 T(ecei).8 E .43 -.15
(ve e)-.25 H -.15(ve)-.1 G .13(nts, you must use).15 F F3(mlx_loop)2.63
E F0 .13(\(\). This function ne)2.63 F -.15(ve)-.25 G 2.631(rr).15 G
.131(eturns. It is an in\214nite loop that w)-2.631 F .131(aits for)-.1
F .853(an e)108 410.4 R -.15(ve)-.25 G .853(nt, and then calls a user)
.15 F .852(-de\214ned function associated with this e)-.2 F -.15(ve)-.25
G 3.352(nt. A).15 F .852(single parameter is needed,)3.352 F
(the connection identi\214er)108 422.4 Q F2(mlx_ptr)2.88 E F0(\(see the)
3.23 E F3(mlx manual\).)2.5 E F0 -1.1(Yo)108 446.4 S 2.5(uc)1.1 G
(an assign dif)-2.5 E(ferent functions to the three follo)-.25 E(wing e)
-.25 E -.15(ve)-.25 G(nts:).15 E 2.5(-Ak)108 458.4 S .3 -.15(ey i)-2.6 H
2.5(sp).15 G(ressed)-2.5 E 2.5(-T)108 470.4 S(he mouse b)-2.5 E
(utton is pressed)-.2 E 2.757(-Ap)108 482.4 S .257(art of the windo)
-2.757 F 2.757(ws)-.25 G .257(hould be re-dra)-2.757 F .258
(wn \(this is called an "e)-.15 F .258(xpose" e)-.15 F -.15(ve)-.25 G
.258(nt, and it is your program').15 F 2.758(sj)-.55 G .258(ob to)-2.758
F(handle it\).)108 494.4 Q(Each windo)108 518.4 Q 2.5(wc)-.25 G
(an de\214ne a dif)-2.5 E(ferent function for the same e)-.25 E -.15(ve)
-.25 G(nt.).15 E 1.565(The three functions)108 542.4 R F3(mlx_k)4.065 E
(ey_hook)-.1 E F0(\(\),)4.065 E F3(mlx_mouse_hook)4.065 E F0 1.565
(\(\) and)4.065 F F3(mlx_expose_hook)4.065 E F0 1.565(\(\) w)4.065 F
1.565(ork e)-.1 F 1.565(xactly the)-.15 F .441(same w)108 554.4 R(ay)-.1
E(.)-.65 E F2(funct_ptr)7.411 E F0 .441
(is a pointer to the function you w)3.671 F .442
(ant to be called when an e)-.1 F -.15(ve)-.25 G .442
(nt occurs. This assign-).15 F .899(ment is speci\214c to the windo)108
566.4 R 3.399(wd)-.25 G .898(e\214ned by the)-3.399 F F2(win_ptr)3.738 E
F0(identi\214er)4.128 E 3.398(.T)-.55 G(he)-3.398 E F2(par)4.648 E(am)
-.15 E F0 .898(adress will be passed to the)3.718 F(function e)108 578.4
Q -.15(ve)-.25 G(rytime it is called, and should be used to store the p\
arameters it might need.).15 E .397(The syntax for the)108 602.4 R F3
(mlx_loop_hook)2.897 E F0 .398(\(\) function is identical to the pre)
2.897 F .398(vious ones, b)-.25 F .398(ut the gi)-.2 F -.15(ve)-.25 G
2.898(nf).15 G .398(unction will)-2.898 F(be called when no e)108 614.4
Q -.15(ve)-.25 G(nt occurs.).15 E(When it catches an e)108 638.4 Q -.15
(ve)-.25 G(nt, the MiniLibX calls the corresponding function with \214x)
.15 E(ed parameters:)-.15 E -.15(ex)113 662.4 S(pose_hook\(v).15 E
(oid *param\);)-.2 E -.1(ke)113 674.4 S(y_hook\(int k)-.05 E -.15(ey)-.1
G(code,v).15 E(oid *param\);)-.2 E(mouse_hook\(int b)113 686.4 Q
(utton,int x,int y)-.2 E(,v)-.65 E(oid *param\);)-.2 E(loop_hook\(v)113
698.4 Q(oid *param\);)-.2 E 1.091(These function names are arbitrary)108
722.4 R 3.591(.T)-.65 G(he)-3.591 E 3.591(yh)-.15 G 1.09
(ere are used to distinguish parameters according to the e)-3.591 F -.15
(ve)-.25 G(nt.).15 E(September 19, 2002)265.865 768 Q(1)188.865 E 0 Cg
EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 361.06(MiniLibX\(3\) MiniLibX\(3\))72 48 R
(These functions are NO)108 84 Q 2.5(Tp)-.4 G(art of the MiniLibX.)-2.5
E/F1 10/Times-Italic@0 SF(par)109.25 108 Q(am)-.15 E F0 1.203
(is the address speci\214ed in the mlx_*_hook calls. This address is ne)
4.023 F -.15(ve)-.25 G 3.704(ru).15 G 1.204(sed nor modi\214ed by the)
-3.704 F 1.637(MiniLibX. On k)108 120 R 1.937 -.15(ey a)-.1 H 1.637
(nd mouse e).15 F -.15(ve)-.25 G 1.637
(nts, additional information is passed:).15 F F1 -.1(ke)4.137 G(ycode)
-.2 E F0 1.636(tells you which k)4.316 F 1.936 -.15(ey i)-.1 H(s).15 E
.977(pressed \(X11 : look for the include \214le "k)108 132 R -.15(ey)
-.1 G .977(symdef.h", MacOS : create a small softw).15 F .978
(are and \214nd out by)-.1 F .371(yourself\), \()108 144 R F1(x)3.641 E
F0(,)3.401 E F1(y)3.611 E F0 2.871(\)a)3.191 G .371
(re the coordinates of the mouse click in the windo)-2.871 F 1.671 -.65
(w, a)-.25 H(nd).65 E F1 -.2(bu)2.871 G(tton).2 E F0 .371
(tells you which mouse)3.111 F -.2(bu)108 156 S(tton w).2 E(as pressed.)
-.1 E/F2 10.95/Times-Bold@0 SF(GOING FUR)72 184.8 Q(THER WITH EVENTS)
-.438 E F0 .504(The MiniLibX pro)108 196.8 R .504
(vides a much generic access to all type of e)-.15 F -.15(ve)-.25 G .505
(nts. The).15 F F1(mlx.h)3.385 E F0 .505(include de\214ne)3.285 F/F3 10
/Times-Bold@0 SF(mlx_hook\(\))3.005 E F0 .89
(in the same manner mlx_*_hook functions w)108 208.8 R .89(ork. The e)
-.1 F -.15(ve)-.25 G .89(nt and mask v).15 F .89(alues will be tak)-.25
F .89(en from the X11)-.1 F(include \214le "X.h" \(e)108 220.8 Q -.15
(ve)-.25 G 2.5(nf).15 G(or MacOSX, for compatibility purposes\))-2.5 E
.402(See source code of mlx_int_param_e)108 244.8 R -.15(ve)-.25 G .402
(nt.c to \214nd out ho).15 F 2.902(wt)-.25 G .403
(he MiniLibX will call your o)-2.902 F .403(wn function for a)-.25 F
(speci\214c e)108 256.8 Q -.15(ve)-.25 G(nt.).15 E F2(SEE ALSO)72 285.6
Q F0(mlx\(3\), mlx_ne)108 297.6 Q(w_windo)-.25 E(w\(3\), mlx_pix)-.25 E
(el_put\(3\), mlx_ne)-.15 E(w_image\(3\))-.25 E F2 -.548(AU)72 326.4 S
(THOR).548 E F0(Cop)108 338.4 Q(yright ol@ - 2002-2015 - Oli)-.1 E
(vier Crouzet)-.25 E(September 19, 2002)265.865 768 Q(2)188.865 E 0 Cg
EP
%%Trailer
end
%%EOF
